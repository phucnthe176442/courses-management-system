// <auto-generated />
using System;
using CourseManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719061826_init_create")]
    partial class init_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseCategoryAssignment", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.HasKey("CourseId", "CategoryId")
                        .HasName("PK__CourseCa__D24A193508282796");

                    b.HasIndex("CategoryId");

                    b.ToTable("CourseCategoryAssignments", (string)null);
                });

            modelBuilder.Entity("CourseManagement.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__8F1EF7AE08935C64");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CourseManagement.Models.CourseCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__CourseCa__D54EE9B4C764AB06");

                    b.ToTable("CourseCategories");
                });

            modelBuilder.Entity("CourseManagement.Models.Enrollment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateOnly?>("EnrolledDate")
                        .HasColumnType("date")
                        .HasColumnName("enrolled_date");

                    b.HasKey("UserId", "CourseId")
                        .HasName("PK__Enrollme__414FD8759DBF5D44");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("CourseManagement.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("InstructorId")
                        .HasName("PK__Instruct__A1EF56E87B54B864");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("CourseManagement.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateOnly?>("ReviewDate")
                        .HasColumnType("date")
                        .HasColumnName("review_date");

                    b.Property<string>("ReviewText")
                        .HasColumnType("text")
                        .HasColumnName("review_text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__60883D9084BE4940");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CourseManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F090E7CA1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseCategoryAssignment", b =>
                {
                    b.HasOne("CourseManagement.Models.CourseCategory", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseCat__categ__31EC6D26");

                    b.HasOne("CourseManagement.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseCat__cours__30F848ED");
                });

            modelBuilder.Entity("CourseManagement.Models.Course", b =>
                {
                    b.HasOne("CourseManagement.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("FK__Courses__instruc__286302EC");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("CourseManagement.Models.Enrollment", b =>
                {
                    b.HasOne("CourseManagement.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Enrollmen__cours__2C3393D0");

                    b.HasOne("CourseManagement.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Enrollmen__user___2B3F6F97");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseManagement.Models.Review", b =>
                {
                    b.HasOne("CourseManagement.Models.Course", "Course")
                        .WithMany("Reviews")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Reviews__course___35BCFE0A");

                    b.HasOne("CourseManagement.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__user_id__34C8D9D1");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseManagement.Models.Course", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CourseManagement.Models.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("CourseManagement.Models.User", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
